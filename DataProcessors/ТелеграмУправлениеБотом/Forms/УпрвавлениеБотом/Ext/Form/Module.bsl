
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьСписокКонтактовПриОткрытии();
	Элементы.СписокКонтактов.ТекущаяСтрока = ?(СписокКонтактов.Количество()>0, СписокКонтактов.Получить(0), Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьМастераПервоначальнойНастройкиБота(Команда)
	
	ОткрытьФорму("Обработка.ТелеграмУправлениеБотом.Форма.НачальнаяНастройкаБота");
	
КонецПроцедуры

//////////////////////////Сообщения++/////////////////////////////////////
&НаКлиенте
Процедура АвтоОбновлениеСообщенийКаждуюСекПриИзменении(Элемент)
	
	Если АвтоОбновлениеСообщенийКаждуюСек = Истина Тогда 
		ОбновитьСообщения();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСообщенияКнопка(Команда)
	ОбновитьСообщения();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСообщения()
	
	//Перед обновлением сохраним введённые данные
	СообщениеОтправляемоеТекст = Элементы.СообщениеОтправляемоеТекст.ТекстРедактирования;
	//////////////
	
	Если Элементы.СписокКонтактов.ТекущиеДанные = Неопределено Тогда 
		пКонтакт = Неопределено;
	Иначе
		пКонтакт = Элементы.СписокКонтактов.ТекущиеДанные.Контакт;
	КонецЕсли;
	
	ПроверитьОбновитьСообщенияНаСервере(пКонтакт);	
	
	Если АвтоОбновлениеСообщенийКаждуюСек = Истина Тогда 
		ПодключитьОбработчикОжидания("ОбновитьСообщения", 1, Истина);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьОбновитьСообщенияНаСервере(пКонтакт)
	
	ЗапросПроверочный = Новый Запрос();
	ЗапросПроверочный.Текст = "ВЫБРАТЬ
	                          |	вложенный.ДатаСообщения
	                          |ИЗ
	                          |	(ВЫБРАТЬ ПЕРВЫЕ 1
	                          |		ТелеграмСообщения.ДатаСообщения КАК ДатаСообщения
	                          |	ИЗ
	                          |		РегистрСведений.ТелеграмСообщения КАК ТелеграмСообщения
	                          |	
	                          |	УПОРЯДОЧИТЬ ПО
	                          |		ДатаСообщения УБЫВ) КАК вложенный
	                          |ГДЕ
	                          |	вложенный.ДатаСообщения <> &ДатаПоследнегоСообщения";
	ЗапросПроверочный.УстановитьПараметр("ДатаПоследнегоСообщения", ДатаПоследнегоСообщения);	
	Если НЕ ЗапросПроверочный.Выполнить().Пустой() Тогда //Появилось новое сообщение		
		
		ЗапросКонтактыНовыхСообщений = Новый Запрос();
		ЗапросКонтактыНовыхСообщений.Текст = "ВЫБРАТЬ
		                                     |	ВложенныйЗапрос.ТелеграмКонтакт,
		                                     |	ВложенныйЗапрос.ДатаСообщения
		                                     |ИЗ
		                                     |	(ВЫБРАТЬ
		                                     |		ТелеграмСообщения.ТелеграмКонтакт КАК ТелеграмКонтакт,
		                                     |		МАКСИМУМ(ТелеграмСообщения.ДатаСообщения) КАК ДатаСообщения
		                                     |	ИЗ
		                                     |		РегистрСведений.ТелеграмСообщения КАК ТелеграмСообщения
		                                     |	ГДЕ
		                                     |		ТелеграмСообщения.ДатаСообщения > &ДатаПоследнегоСообщения
		                                     |	
		                                     |	СГРУППИРОВАТЬ ПО
		                                     |		ТелеграмСообщения.ТелеграмКонтакт) КАК ВложенныйЗапрос
		                                     |
		                                     |УПОРЯДОЧИТЬ ПО
		                                     |	ВложенныйЗапрос.ДатаСообщения УБЫВ";
		ЗапросКонтактыНовыхСообщений.УстановитьПараметр("ДатаПоследнегоСообщения", ДатаПоследнегоСообщения);
		ВыборкаКонтактов = ЗапросКонтактыНовыхСообщений.Выполнить().Выбрать();
		
		Пока ВыборкаКонтактов.Следующий() Цикл
			НайденныеСтроки = СписокКонтактов.НайтиСтроки(Новый Структура("Контакт", ВыборкаКонтактов.ТелеграмКонтакт));
			Если НайденныеСтроки.Количество() > 0 Тогда
				НайденныеСтроки[0].ДатаПоследнегоСообщения = ВыборкаКонтактов.ДатаСообщения;
			Иначе
				новСТрока = СписокКонтактов.Добавить();	
				новСТрока.Контакт = ВыборкаКонтактов.ТелеграмКонтакт; 
				новСТрока.ДатаПоследнегоСообщения = ВыборкаКонтактов.ДатаСообщения; 
			КонецЕсли;
		КонецЦикла;
		СписокКонтактов.Сортировать("ДатаПоследнегоСообщения Убыв");
		
		ОбновитьСообщенияНаСервере(пКонтакт);		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСообщенияНаСервере(пКонтакт)
	
	Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВложенныйЗапрос.Входящее,
		               |	ВложенныйЗапрос.ДатаСообщения КАК ДатаСообщения,
		               |	ВложенныйЗапрос.Текст,
		               |	ВложенныйЗапрос.Сообщение,
		               |	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.ДатаСообщения, ДЕНЬ) КАК ДатаСообщенияДень
		               |ИЗ
		               |	(ВЫБРАТЬ ПЕРВЫЕ 20
		               |		ТелеграмСообщения.Сообщение КАК Сообщение,
		               |		ТелеграмСообщения.Текст КАК Текст,
		               |		ТелеграмСообщения.ДатаСообщения КАК ДатаСообщения,
		               |		ТИПЗНАЧЕНИЯ(ТелеграмСообщения.Сообщение) = ТИП(Документ.ТелеграмСообщенияВходящие) КАК Входящее
		               |	ИЗ
		               |		РегистрСведений.ТелеграмСообщения КАК ТелеграмСообщения
		               |	ГДЕ
		               |		ТелеграмСообщения.ТелеграмКонтакт = &ТелеграмКонтакт
		               |	
		               |	УПОРЯДОЧИТЬ ПО
		               |		ДатаСообщения УБЫВ) КАК ВложенныйЗапрос
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ДатаСообщения
		               |ИТОГИ ПО
		               |	ДатаСообщенияДень";
		Запрос.УстановитьПараметр("ТелеграмКонтакт", пКонтакт); 
		Выборка1 = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		пСообщенияТекст = "";
		Пока Выборка1.Следующий() Цикл
			пСообщенияТекст = пСообщенияТекст 
			+ Символы.ПС + Символы.Таб + Символы.Таб + "-----" + Формат(Выборка1.ДатаСообщенияДень, "ДФ=dd.MM.yyyy") + "-----" + Символы.ПС + Символы.ПС;
			Выборка2 = Выборка1.Выбрать();
			Пока Выборка2.Следующий() Цикл 
				пСообщенияТекст = пСообщенияТекст 
				+ ?(Выборка2.Входящее, "", Символы.Таб)
				+ Формат(Выборка2.ДатаСообщения, "ДФ=ЧЧ:мм") + "- " + Выборка2.Текст + Символы.ПС; 
				ДатаПоследнегоСообщения = Выборка2.ДатаСообщения; 
			КонецЦикла;		
		КонецЦикла;
		
		СообщенияТекст = пСообщенияТекст;
		
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокКонтактовПриОткрытии()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ТелеграмСообщения.ДатаСообщения КАК ДатаСообщения
	               |ИЗ
	               |	РегистрСведений.ТелеграмСообщения КАК ТелеграмСообщения
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаСообщения УБЫВ";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		ДатаПоследнегоСообщения = '00010101';
	иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ДатаПоследнегоСообщения = Выборка.ДатаСообщения;
	КонецЕсли;
	
	ЗапросКонтактыПриОткрытии = Новый Запрос();
	ЗапросКонтактыПриОткрытии.Текст = "ВЫБРАТЬ
	                                  |	ВложенныйЗапрос.ТелеграмКонтакт,
	                                  |	ВложенныйЗапрос.ДатаСообщения
	                                  |ИЗ
	                                  |	(ВЫБРАТЬ
	                                  |		ТелеграмСообщения.ТелеграмКонтакт КАК ТелеграмКонтакт,
	                                  |		МАКСИМУМ(ТелеграмСообщения.ДатаСообщения) КАК ДатаСообщения
	                                  |	ИЗ
	                                  |		РегистрСведений.ТелеграмСообщения КАК ТелеграмСообщения
	                                  |	
	                                  |	СГРУППИРОВАТЬ ПО
	                                  |		ТелеграмСообщения.ТелеграмКонтакт) КАК ВложенныйЗапрос
	                                  |
	                                  |УПОРЯДОЧИТЬ ПО
	                                  |	ВложенныйЗапрос.ДатаСообщения УБЫВ";
	ВыборкаКонтактов = ЗапросКонтактыПриОткрытии.Выполнить().Выбрать();
	
	Пока ВыборкаКонтактов.Следующий() Цикл
		НайденныеСтроки = СписокКонтактов.НайтиСтроки(Новый Структура("Контакт", ВыборкаКонтактов.ТелеграмКонтакт));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].ДатаПоследнегоСообщения = ВыборкаКонтактов.ДатаСообщения;
		Иначе
			новСТрока = СписокКонтактов.Добавить();	
			новСТрока.Контакт = ВыборкаКонтактов.ТелеграмКонтакт; 
			новСТрока.ДатаПоследнегоСообщения = ВыборкаКонтактов.ДатаСообщения; 
		КонецЕсли;
	КонецЦикла;
	СписокКонтактов.Сортировать("ДатаПоследнегоСообщения Убыв");
		

КонецПроцедуры

&НаКлиенте
Процедура СписокКонтактовПриАктивизацииСтроки(Элемент)	
	
	Если Элементы.СписокКонтактов.ТекущиеДанные = Неопределено Тогда 
		пКонтакт = Неопределено;
	Иначе
		пКонтакт = Элементы.СписокКонтактов.ТекущиеДанные.Контакт;
	КонецЕсли;

	ОбновитьСообщенияНаСервере(пКонтакт);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщение(Команда)
	
	Если Элементы.СписокКонтактов.ТекущиеДанные = Неопределено Тогда 
		пКонтакт = Неопределено;
	Иначе
		пКонтакт = Элементы.СписокКонтактов.ТекущиеДанные.Контакт;
	КонецЕсли;

	Если пКонтакт <> Неопределено И ЗначениеЗаполнено(СообщениеОтправляемоеТекст) Тогда
		ОтправитьСообщениеНаСервере(пКонтакт);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьСообщениеНаСервере(пКонтакт)	
	
	СтруктураСообщения = Новый Структура();
	СтруктураСообщения.Вставить("ТелеграмКонтакт", пКонтакт);
	СтруктураСообщения.Вставить("Текст", СообщениеОтправляемоеТекст);	
	
	ТелеграмМодуль.СоздатьИОтправитьДокСообщениеИсходящие(СтруктураСообщения);		
	
	СообщениеОтправляемоеТекст = "";
	
КонецПроцедуры

&НаКлиенте // при нажатии интр отправляем сообщение
Процедура СообщениеОтправляемоеТекстИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если Прав(Текст, 1) = Символы.ПС Тогда // отправляем сообщение
		Если Элементы.СписокКонтактов.ТекущиеДанные = Неопределено Тогда 
			пКонтакт = Неопределено;
		Иначе
			пКонтакт = Элементы.СписокКонтактов.ТекущиеДанные.Контакт;
		КонецЕсли;
		СообщениеОтправляемоеТекст = Лев(Текст, СтрДлина(Текст) - 1);
		Если пКонтакт <> Неопределено И ЗначениеЗаполнено(СообщениеОтправляемоеТекст) Тогда
			ОтправитьСообщениеНаСервере(пКонтакт);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаСообщения Тогда 
		АвтоОбновлениеСообщенийКаждуюСек = Истина;
		ОбновитьСообщения();
	Иначе
		АвтоОбновлениеСообщенийКаждуюСек = Ложь;
	КонецЕсли;
		
КонецПроцедуры
//////////////////////////Сообщения--/////////////////////////////////////


