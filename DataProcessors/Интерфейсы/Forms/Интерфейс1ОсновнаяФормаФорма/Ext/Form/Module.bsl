
&НаСервере
Функция КомандыВыборНаСервере(СсылкаНаДействие)
	
	Если СсылкаНаДействие.ЭтоГруппа или СсылкаНаДействие.Ссылка.Пустая() Тогда
		Возврат Истина;
	Иначе		
		Массив = Новый Массив();
		Массив.Добавить(СсылкаНаДействие);
		Если ВыполнятьДействияВФоне Тогда 
			МассивПараметров = Новый Массив();
			МассивПараметров.Добавить(Массив);
			ОбщегоНазначения.ВыполнитьПроцедуруФункциюВФонеНаСервере("Справочники.Действия.ВыполнитьДействия", МассивПараметров);
		Иначе
			Справочники.Действия.ВыполнитьДействия(Массив);
		КонецЕсли;
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
&НаКлиенте
Процедура КомандыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ЭтоГруппа = КомандыВыборНаСервере(ВыбраннаяСтрока); 
	
	Если ЭтоГруппа Тогда
		Если Элементы.Команды.Развернут(ВыбраннаяСтрока) Тогда
			Элементы.Команды.Свернуть(ВыбраннаяСтрока);
		Иначе
			Элементы.Команды.Развернуть(ВыбраннаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ЗапроситьДанныеСОборудования(ВыбраннаяСтрока)
	
	УправлениеОборудованием.ОбновитьДанныеСОборудования(ВыбраннаяСтрока.Оборудование, ВыбраннаяСтрока.ОбъектДанных);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ТекущиеДанныеОборудованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗапроситьДанныеСОборудования(ВыбраннаяСтрока);
	Элементы.ТекущиеДанныеОборудования.Обновить();
	
КонецПроцедуры



///////////////////////////////КАМЕРЫ+////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ТрансляцияКамеры(Команда)
		  
	Если Объект.ТрансляцияКамеры Тогда 
		Объект.ТрансляцияКамеры = Ложь;
		Элементы.ТрансляцияКамеры.ЦветФона = Новый Цвет(255, 255, 255);
		Элементы.ТрансляцияКамеры.Пометка = Ложь;
	Иначе		
		Если Элементы.ТаблицаКамеры.ТекущиеДанные <> Неопределено Тогда
			Объект.ТрансляцияКамеры = Истина;
			Элементы.ТрансляцияКамеры.ЦветФона = Новый Цвет(0, 255, 0);
			Элементы.ТрансляцияКамеры.Пометка = Истина;		
			ПолучитьНавигационнуюСсылкуИзНаФотоВРегистре(Элементы.ТаблицаКамеры.ТекущиеДанные.Оборудование); 
			ОбновитьФото();
		КонецЕсли;
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ПолучитьНавигационнуюСсылкуИзНаФотоВРегистре(Оборудование)
	
	КлючРегистра = РегистрыСведений.ТекущиеДанныеОборудования.СоздатьКлючЗаписи(Новый Структура("Оборудование, ОбъектДанных", Оборудование, "Трансляция")); 
	Объект.КамераНавигационнаяСсылка = ПолучитьНавигационнуюСсылку(КлючРегистра, "Хранилище");  			
	Объект.КамераНавигационнаяСсылка1 = ПолучитьНавигационнуюСсылку(КлючРегистра, "Хранилище");  			
	Объект.КамераНавигационнаяСсылка2 = ПолучитьНавигационнуюСсылку(КлючРегистра, "Хранилище");  					 			 			
	
	ОбновитьНавигационнуюСсылкуКамеры();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФото()	
	
	ОбновитьНавигационнуюСсылкуКамеры();

	Если Объект.ТрансляцияКамеры Тогда 		
		ЗаписатьСобытиеПросмотраВРегистрНаСервере(Элементы.ТаблицаКамеры.ТекущиеДанные.Оборудование);
		#Если ВебКлиент Тогда
			ПодключитьОбработчикОжидания("ОбновитьФото",4, Истина);	
		#Иначе
			ПодключитьОбработчикОжидания("ОбновитьФото",0.3, Истина);
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДвоичныеДанныеРегистра(Оборудование) // Не используется?
	
	Возврат РегистрыСведений.ТекущиеДанныеОборудования.Получить(Новый Структура("Оборудование, ОбъектДанных", Оборудование, "Трансляция")).Хранилище.Получить(); 
	
КонецФункции


&НаСервере
Процедура ОбновитьНавигационнуюСсылкуКамеры()

	Если Объект.Камера = Объект.КамераНавигационнаяСсылка Тогда
		Объект.Камера = Объект.КамераНавигационнаяСсылка1;	
	ИначеЕсли Объект.Камера = Объект.КамераНавигационнаяСсылка1 Тогда
		Объект.Камера = Объект.КамераНавигационнаяСсылка2;
	Иначе
		Объект.Камера = Объект.КамераНавигационнаяСсылка;	
	КонецЕсли;

КонецПроцедуры
	
&НаСервере
Процедура ЗаписатьСобытиеПросмотраВРегистрНаСервере(Оборудование)
	
	ОбщегоНазначения.ЗаписатьДанныеОборудования(Оборудование, "Транслировать", 1, ТекущаяДата());
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокКамерНаСервере()
		
	ТаблицаКамеры.Очистить();
	Для Каждого СтрокаНастроек Из Справочники.Настройки.СписокКамер.ТаблицаНастроек Цикл
		нСтрока = ТаблицаКамеры.Добавить();
		нСтрока.Оборудование = СтрокаНастроек.Значение;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокКамер(Команда)
	ОбновитьСписокКамерНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТаблицаКамерыВыборНаСервере(Оборудование)
	
	ПараметрыФоновогоЗадания = Новый Массив();
	ПараметрыФоновогоЗадания.Добавить(Оборудование);
		
	ФоновоеЗадание = ФоновыеЗадания.Выполнить("УправлениеОборудованием.ПолучитьФотоСКамерыИПоместитьЕгоВРегистрТекущиеДанныеОборудования", ПараметрыФоновогоЗадания); 			
    
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКамерыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ Объект.ТрансляцияКамеры Тогда //Обновляем фото если не включена трансляция	
		ТаблицаКамерыВыборНаСервере(Элементы.ТаблицаКамеры.ТекущиеДанные.Оборудование);
		#Если ВебКлиент Тогда
			ПодключитьОбработчикОжидания("ОбновитьФото",5, Истина);
		#Иначе
			ПодключитьОбработчикОжидания("ОбновитьФото",2, Истина);
		#КонецЕсли		
	КонецЕсли;	
	
КонецПроцедуры




&НаКлиенте
Процедура ТаблицаКамерыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ТаблицаКамеры.ТекущиеДанные <> Неопределено Тогда
		ПолучитьНавигационнуюСсылкуИзНаФотоВРегистре(Элементы.ТаблицаКамеры.ТекущиеДанные.Оборудование); 
	КонецЕсли;
	
КонецПроцедуры


///////////////////////////////КАМЕРЫ-////////////////////////////////////////////////////////////////////

///////////////////////////////ИНТЕРФЕЙСНЫЕ СХЕМЫ+////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура АвтообновлениеДанныхНаСхеме() Экспорт
	
	Если Элементы.ТаблицаИнтерфейсныхСхем.ТекущиеДанные <> Неопределено Тогда
		ОбновитьДанныеНаСхемеНаСервере(Элементы.ТаблицаИнтерфейсныхСхем.ТекущиеДанные.Настройка);
	КонецЕсли;
	ПодключитьОбработчикОжидания("АвтообновлениеДанныхНаСхеме", 60, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокИнтерфейсныхСхемНаСервере()
		
	ТаблицаИнтерфейсныхСхем.Очистить();
	Для Каждого СтрокаНастроек Из Справочники.Настройки.СписокИнтерфейсныхСхем.ТаблицаНастроек Цикл
		нСтрока = ТаблицаИнтерфейсныхСхем.Добавить();
		нСтрока.Настройка = СтрокаНастроек.Значение;
	КонецЦикла;
		
КонецПроцедуры
&НаСервере
Процедура ПостроитьИнтерфейснуюСхемуНаСервере(Настройка)
	
	Попытка // из-за некорректных настроект может быть сбой 
		НастройкаСПутьКСхемеВРабочемКаталоге = Настройка.ТаблицаНастроек.Найти("ПутьКСхемеВРабочемКаталоге", "Параметр");
		Если НастройкаСПутьКСхемеВРабочемКаталоге = Неопределено Тогда 
			Сообщить("Не заполнена настройка ""ПутьКСхемеВРабочемКаталоге""");
			Возврат;
		Иначе
			ПутьКСхемеВРабочемКаталоге = НастройкаСПутьКСхемеВРабочемКаталоге.Значение;
		КонецЕсли;
		
		ИнтерфейснаяСхема.Прочитать(Константы.КаталогФайловРабочий.Получить() + ПутьКСхемеВРабочемКаталоге);
		
		ОбновитьДанныеНаСхемеНаСервере(Настройка)
	Исключение
		Сообщить("Не удалось построить схему. Ошибка: " + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьДанныеНаСхемеНаСервере(Настройка)
	
	НастройкаСОбласти = Настройка.ТаблицаНастроек.Найти("Области", "Параметр");
	Если НастройкаСОбласти = Неопределено Тогда 
		Сообщить("Не заполнена настройка ""Области""");
		Возврат;
	Иначе
		Области = НастройкаСОбласти.Значение.ТаблицаНастроек;
	КонецЕсли;
	
	НаименьшаяДатаДанных = ТекущаяДата();
	Для Каждого Область Из Области Цикл 
		НастройкаТекущиеДанныеОборудование = Область.Значение.ТаблицаНастроек.Найти("ТекущиеДанныеОборудование","Параметр");	
		Если НастройкаТекущиеДанныеОборудование = Неопределено Тогда 
			Сообщить("Не заполнена настройка ""ТекущиеДанныеОборудование""");
			Возврат;
		Иначе
			ТекущиеДанныеОборудование = НастройкаТекущиеДанныеОборудование.Значение;
		КонецЕсли;
		
		НастройкаТекущиеДанныеОбъектДанных = Область.Значение.ТаблицаНастроек.Найти("ТекущиеДанныеОбъектДанных","Параметр");	
		Если НастройкаТекущиеДанныеОбъектДанных = Неопределено Тогда 
			Сообщить("Не заполнена настройка ""ТекущиеДанныеОбъектДанных""");
			Возврат;
		Иначе
			ТекущиеДанныеОбъектДанных = НастройкаТекущиеДанныеОбъектДанных.Значение;
		КонецЕсли;
		
		НастройкаТекущиеДанныеЗначениеИстина = Область.Значение.ТаблицаНастроек.Найти("ТекущиеДанныеЗначениеИстина","Параметр");	
		Если НастройкаТекущиеДанныеЗначениеИстина = Неопределено Тогда 
			Сообщить("Не заполнена настройка ""ТекущиеДанныеЗначениеИстина""");
			Возврат;
		Иначе
			ТекущиеДанныеЗначениеИстина = НастройкаТекущиеДанныеЗначениеИстина.Значение;
		КонецЕсли;
		
		НастройкаТекущиеДанныеЗначениеЛожь = Область.Значение.ТаблицаНастроек.Найти("ТекущиеДанныеЗначениеЛожь","Параметр");	
		Если НастройкаТекущиеДанныеЗначениеЛожь = Неопределено Тогда 
			Сообщить("Не заполнена настройка ""ТекущиеДанныеЗначениеЛожь""");
			Возврат;
		Иначе
			ТекущиеДанныеЗначениеЛожь = НастройкаТекущиеДанныеЗначениеЛожь.Значение;
		КонецЕсли;

		НастройкаЗначениеВНадпись = Область.Значение.ТаблицаНастроек.Найти("ЗначениеВНадпись","Параметр");	
		Если НастройкаЗначениеВНадпись = Неопределено Тогда 
			ЗначениеВНадпись = Ложь;
		Иначе
			ЗначениеВНадпись = НастройкаЗначениеВНадпись.Значение;
		КонецЕсли;
			
		ЗаписьРегистра = РегистрыСведений.ТекущиеДанныеОборудования.Получить(Новый Структура("Оборудование, ОбъектДанных", ТекущиеДанныеОборудование, ТекущиеДанныеОбъектДанных));
		
		СтруктураСЦветами = ПолучитьЦветаОбластиИзНастройки(Область);
		Если ЗаписьРегистра.Данные = ТекущиеДанныеЗначениеИстина Тогда
			Цвет1 = СтруктураСЦветами.АЦвет1;
			Цвет2 = СтруктураСЦветами.АЦвет2;
			Цвет3 = СтруктураСЦветами.АЦвет3;	
		ИначеЕсли ЗаписьРегистра.Данные = ТекущиеДанныеЗначениеЛожь Тогда
			Цвет1 = СтруктураСЦветами.ДЦвет1;
			Цвет2 = СтруктураСЦветами.ДЦвет2;
			Цвет3 = СтруктураСЦветами.ДЦвет3;	
		Иначе
			Цвет1 = СтруктураСЦветами.СЦвет1;
			Цвет2 = СтруктураСЦветами.СЦвет2;
			Цвет3 = СтруктураСЦветами.СЦвет3;
		КонецЕсли;
		Элемент = ИнтерфейснаяСхема.ЭлементыГрафическойСхемы[Область.Параметр];
		Элемент.ЦветФона = Новый Цвет(Цвет1, Цвет2, Цвет3);
		
		Если ЗначениеВНадпись Тогда 
			Элемент.Наименование = ЗаписьРегистра.Данные;
		КонецЕсли;
			
		Если НаименьшаяДатаДанных > ЗаписьРегистра.Дата Тогда
			НаименьшаяДатаДанных = ЗаписьРегистра.Дата;
		КонецЕсли;
		
	КонецЦикла;
	
	ДатаОбноленияДанныхИнтерфейснойСхемы = НаименьшаяДатаДанных;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеНаСхеме(Команда)
	
	Если Элементы.ТаблицаИнтерфейсныхСхем.ТекущиеДанные <> Неопределено Тогда
		ОбновитьДанныеНаСхемеНаСервере(Элементы.ТаблицаИнтерфейсныхСхем.ТекущиеДанные.Настройка);
	КонецЕсли;
	ПодключитьОбработчикОжидания("АвтообновлениеДанныхНаСхеме", 60, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокИнтерфейсныхСхем(Команда)
	ОбновитьСписокИнтерфейсныхСхемНаСервере();
КонецПроцедуры
&НаКлиенте
Процедура ТаблицаИнтерфейсныхСхемПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ТаблицаИнтерфейсныхСхем.ТекущиеДанные <> Неопределено Тогда
		ПостроитьИнтерфейснуюСхемуНаСервере(Элементы.ТаблицаИнтерфейсныхСхем.ТекущиеДанные.Настройка);
		ПодключитьОбработчикОжидания("АвтообновлениеДанныхНаСхеме", 60, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПостроитьИнтерфейснуюСхему(Команда)
	Если Элементы.ТаблицаИнтерфейсныхСхем.ТекущиеДанные <> Неопределено Тогда
		ПостроитьИнтерфейснуюСхемуНаСервере(Элементы.ТаблицаИнтерфейсныхСхем.ТекущиеДанные.Настройка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ИнтерфейснаяСхемаВыборПроверкаНаличияДействияНаСервере(ИмяЭлемента, Настройка)
	
	Ответ = Ложь;
	
	НастройкаСОбласти = Настройка.ТаблицаНастроек.Найти("Области", "Параметр");
	Если НастройкаСОбласти = Неопределено Тогда 
		Сообщить("Не заполнена настройка ""Области""");
		// ответ оставляем ложь	
	Иначе
		Области = НастройкаСОбласти.Значение.ТаблицаНастроек;
	КонецЕсли;
	
	Область = Области.Найти(ИмяЭлемента,"Параметр"); 
	
	Если Область = Неопределено Тогда
		// Для этой области не заданы команды
		// ответ оставляем ложь	
	Иначе	
		Ответ = Истина;	
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

&НаСервере
Процедура ИнтерфейснаяСхемаВыборНаСервере(ИмяЭлемента, Настройка)
	
	НастройкаСОбласти = Настройка.ТаблицаНастроек.Найти("Области", "Параметр");
	Области = НастройкаСОбласти.Значение.ТаблицаНастроек; // Проверка наличия настроек проводилась ранее
		
	Область = Области.Найти(ИмяЭлемента,"Параметр"); // Область существует, проверка выполнялась ранее 
			
	СтруктураСЦветами = ПолучитьЦветаОбластиИзНастройки(Область);
	
	АЦвет1 = СтруктураСЦветами.АЦвет1;
	АЦвет2 = СтруктураСЦветами.АЦвет2;
	АЦвет3 = СтруктураСЦветами.АЦвет3;	
	ДЦвет1 = СтруктураСЦветами.ДЦвет1;
	ДЦвет2 = СтруктураСЦветами.ДЦвет2;
	ДЦвет3 = СтруктураСЦветами.ДЦвет3;	
		
	Элемент = ИнтерфейснаяСхема.ЭлементыГрафическойСхемы[ИмяЭлемента];
	Если Элемент.ЦветФона.Красный = АЦвет1 И Элемент.ЦветФона.Зеленый = АЦвет2 И Элемент.ЦветФона.Синий = АЦвет3 Тогда // Оборудование активно, деактивируем   
		НастройкаДействиеГруппаДействийДеАктивировать = Область.Значение.ТаблицаНастроек.Найти("ДействиеГруппаДействийДеАктивировать","Параметр");	
		Если НастройкаДействиеГруппаДействийДеАктивировать = Неопределено Тогда 
			Сообщить("Не заполнена настройка ""ДействиеГруппаДействийДеАктивировать""");
			Возврат;
		Иначе
			ДействиеГруппаДействийДеАктивировать = НастройкаДействиеГруппаДействийДеАктивировать.Значение;
		КонецЕсли;
		Если ТипЗнч(ДействиеГруппаДействийДеАктивировать) = Тип("СправочникСсылка.Действия") Тогда 
			МассивСДействием = Новый Массив();
			МассивСДействием.Добавить(ДействиеГруппаДействийДеАктивировать);
			Справочники.Действия.ВыполнитьДействия(МассивСДействием);
		ИначеЕсли ТипЗнч(ДействиеГруппаДействийДеАктивировать) = Тип("СправочникСсылка.ГруппыДействий") Тогда 
			Справочники.ГруппыДействий.ВыполнитьГруппуДействий(ДействиеГруппаДействийДеАктивировать);
		КонецЕсли;			
	ИначеЕсли Элемент.ЦветФона.Красный = ДЦвет1 И Элемент.ЦветФона.Зеленый = ДЦвет2 И Элемент.ЦветФона.Синий = ДЦвет3 Тогда // Оборудование деактивно, активируем 
		НастройкаДействиеГруппаДействийАктивировать = Область.Значение.ТаблицаНастроек.Найти("ДействиеГруппаДействийАктивировать","Параметр");	
		Если НастройкаДействиеГруппаДействийАктивировать = Неопределено Тогда 
			Сообщить("Не заполнена настройка ""ДействиеГруппаДействийАктивировать""");
			Возврат;
		Иначе
			ДействиеГруппаДействийАктивировать = НастройкаДействиеГруппаДействийАктивировать.Значение;
		КонецЕсли;
		Если ТипЗнч(ДействиеГруппаДействийАктивировать) = Тип("СправочникСсылка.Действия") Тогда 
			МассивСДействием = Новый Массив();
			МассивСДействием.Добавить(ДействиеГруппаДействийАктивировать);
			Справочники.Действия.ВыполнитьДействия(МассивСДействием);
		ИначеЕсли ТипЗнч(ДействиеГруппаДействийАктивировать) = Тип("СправочникСсылка.ГруппыДействий") Тогда 
			Справочники.ГруппыДействий.ВыполнитьГруппуДействий(ДействиеГруппаДействийАктивировать);
		КонецЕсли;		
	Иначе // какойто сбой, просто обновляем данные
		НастройкаДействиеГруппаДействийОбновитьДанные = Область.Значение.ТаблицаНастроек.Найти("ДействиеГруппаДействийОбновитьДанные","Параметр");	
		Если НастройкаДействиеГруппаДействийОбновитьДанные = Неопределено Тогда 
			Сообщить("Не заполнена настройка ""ДействиеГруппаДействийОбновитьДанные""");
			Возврат;
		Иначе
			ДействиеГруппаДействийОбновитьДанные = НастройкаДействиеГруппаДействийОбновитьДанные.Значение;
		КонецЕсли;
		Если ТипЗнч(ДействиеГруппаДействийОбновитьДанные) = Тип("СправочникСсылка.Действия") Тогда 
			МассивСДействием = Новый Массив();
			МассивСДействием.Добавить(ДействиеГруппаДействийОбновитьДанные);
			Справочники.Действия.ВыполнитьДействия(МассивСДействием);
		ИначеЕсли ТипЗнч(ДействиеГруппаДействийОбновитьДанные) = Тип("СправочникСсылка.ГруппыДействий") Тогда 
			Справочники.ГруппыДействий.ВыполнитьГруппуДействий(ДействиеГруппаДействийОбновитьДанные);
		КонецЕсли;		
	КонецЕсли;
	ОбновитьДанныеНаСхемеНаСервере(Настройка);
		
КонецПроцедуры

&НаКлиенте
Процедура ИнтерфейснаяСхемаВыбор(Элемент)
	
	Если Элемент.ТекущийЭлемент <> Неопределено Тогда
		
		ДействиеДляОбластиСуществует = ИнтерфейснаяСхемаВыборПроверкаНаличияДействияНаСервере(Элемент.ТекущийЭлемент.Имя, Элементы.ТаблицаИнтерфейсныхСхем.ТекущиеДанные.Настройка);
		Если ДействиеДляОбластиСуществует Тогда
			ИмяВыполняемогоИнтерфейсногоДействия = Элемент.ТекущийЭлемент.Имя;
			ПодключитьОбработчикОжидания("ИнтерфейснаяСхемаВыборВыполнениеДействия", 0.01, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтерфейснаяСхемаВыборВыполнениеДействия() Экспорт
	
	ИнтерфейснаяСхемаВыборНаСервере(ИмяВыполняемогоИнтерфейсногоДействия, Элементы.ТаблицаИнтерфейсныхСхем.ТекущиеДанные.Настройка);	
	ИмяВыполняемогоИнтерфейсногоДействия = "";
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЦветаОбластиИзНастройки(Область)
	
	АктивноЦвет1 = Область.Значение.ТаблицаНастроек.Найти("АктивноЦвет1","Параметр");	
	Если АктивноЦвет1 = Неопределено Тогда 
		АЦвет1 = 0;
	Иначе
		АЦвет1 = АктивноЦвет1.Значение;
	КонецЕсли;
	АктивноЦвет2 = Область.Значение.ТаблицаНастроек.Найти("АктивноЦвет2","Параметр");	
	Если АктивноЦвет2 = Неопределено Тогда 
		АЦвет2 = 255;
	Иначе
		АЦвет2 = АктивноЦвет2.Значение;
	КонецЕсли;
	АктивноЦвет3 = Область.Значение.ТаблицаНастроек.Найти("АктивноЦвет3","Параметр");	
	Если АктивноЦвет3 = Неопределено Тогда 
		АЦвет3 = 0;
	Иначе
		АЦвет3 = АктивноЦвет3.Значение;
	КонецЕсли;
	
	ДеАктивноЦвет1 = Область.Значение.ТаблицаНастроек.Найти("ДеАктивноЦвет1","Параметр");	
	Если ДеАктивноЦвет1 = Неопределено Тогда 
		ДЦвет1 = 255;
	Иначе
		ДЦвет1 = ДеАктивноЦвет1.Значение;
	КонецЕсли;
	ДеАктивноЦвет2 = Область.Значение.ТаблицаНастроек.Найти("ДеАктивноЦвет2","Параметр");	
	Если ДеАктивноЦвет2 = Неопределено Тогда 
		ДЦвет2 = 0;
	Иначе
		ДЦвет2 = ДеАктивноЦвет2.Значение;
	КонецЕсли;
	ДеАктивноЦвет3 = Область.Значение.ТаблицаНастроек.Найти("ДеАктивноЦвет3","Параметр");	
	Если ДеАктивноЦвет3 = Неопределено Тогда 
		ДЦвет3 = 0;
	Иначе
		ДЦвет3 = ДеАктивноЦвет3.Значение;
	КонецЕсли;

	СбойЦвет1 = Область.Значение.ТаблицаНастроек.Найти("СбойЦвет1","Параметр");	
	Если СбойЦвет1 = Неопределено Тогда 
		СЦвет1 = 153;
	Иначе
		СЦвет1 = СбойЦвет1.Значение;
	КонецЕсли;
	СбойЦвет2 = Область.Значение.ТаблицаНастроек.Найти("СбойЦвет2","Параметр");	
	Если СбойЦвет2 = Неопределено Тогда 
		СЦвет2 = 153;
	Иначе
		СЦвет2 = СбойЦвет2.Значение;
	КонецЕсли;
	СбойЦвет3 = Область.Значение.ТаблицаНастроек.Найти("СбойЦвет3","Параметр");	
	Если СбойЦвет3 = Неопределено Тогда 
		СЦвет3 = 153;
	Иначе
		СЦвет3 = СбойЦвет3.Значение;
	КонецЕсли;
	
	СтруктураСОтветом = Новый Структура();
	СтруктураСОтветом.Вставить("АЦвет1", АЦвет1);
	СтруктураСОтветом.Вставить("АЦвет2", АЦвет2);
	СтруктураСОтветом.Вставить("АЦвет3", АЦвет3);
	СтруктураСОтветом.Вставить("ДЦвет1", ДЦвет1);
	СтруктураСОтветом.Вставить("ДЦвет2", ДЦвет2);
	СтруктураСОтветом.Вставить("ДЦвет3", ДЦвет3);
	СтруктураСОтветом.Вставить("СЦвет1", СЦвет1);
	СтруктураСОтветом.Вставить("СЦвет2", СЦвет2);
	СтруктураСОтветом.Вставить("СЦвет3", СЦвет3);
	
	Возврат СтруктураСОтветом;
		
КонецФункции
	
///////////////////////////////ИНТЕРФЕЙСНЫЕ СХЕМЫ-////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//СобытияФормы
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСписокКамерНаСервере();
	ОбновитьСписокИнтерфейсныхСхемНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРСПроцессы(Команда)
	
	ОткрытьФорму("РегистрСведений.Процессы.ФормаСписка");
	
КонецПроцедуры











	