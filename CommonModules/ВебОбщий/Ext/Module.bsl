
// НайтиПодходящийПрокси - находит рабочий прокси сервер для указанного протокола 
// Возвращает: Ссылку на справочник ПроксиСервера (Пустая ссылка если ничего не найдено)
// Параметры:
// Протокол - Строка(Необязательный) - Имя нужного протокола(Если не задано, то будет подбираться универсальный прокси, для всех протоколов) 
Функция НайтиДанныеПодходящегоПрокси(Протокол = "Все") Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ПроксиСервера.Ссылка КАК Ссылка
	               |ИЗ
	               |	РегистрСведений.ПроксиСервера_Приоритеты КАК ПроксиСервера_Приоритеты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПроксиСервера КАК ПроксиСервера
	               |		ПО ПроксиСервера_Приоритеты.ПроксиСервер = ПроксиСервера.Ссылка
	               |ГДЕ
	               |	ПроксиСервера_Приоритеты.ПриоритетТелеграм > 0
	               |	И ПроксиСервера.МожноИспользовать
	               |	И ПроксиСервера.Протокол В(&Протоколы)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПроксиСервера_Приоритеты.ПриоритетТелеграм УБЫВ";
	Протоколы = Новый Массив();
	Протоколы.Добавить("Все");                             
	Протоколы.Добавить(Протокол);
	Запрос.УстановитьПараметр("Протоколы", Протоколы);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДанныеПрокси = Выборка.Ссылка;
	Иначе
		ДанныеПрокси = Справочники.ПроксиСервера.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ДанныеПрокси;	
	
КонецФункции

// ПолучитьПодходящийПрокси - находит рабочий прокси сервер для указанного протокола 
// Возвращает: ИнтернетПрокси(), Неопределено
// Параметры:
// Протокол - Строка(Необязательный) - Имя нужного протокола (Например http, https)) 
Функция ПолучитьПодходящийПрокси(Протокол) Экспорт

	ДанныеПрокси = НайтиДанныеПодходящегоПрокси(Протокол);
	Если ЗначениеЗаполнено(ДанныеПрокси) Тогда
		Прокси = Новый ИнтернетПрокси();
		Прокси.Пользователь = ДанныеПрокси.Пользователь;
		Прокси.Пароль = ДанныеПрокси.Пароль;
		Прокси.Установить(Протокол, ДанныеПрокси.АдресПроксиСервера, ДанныеПрокси.ПортПроксиСервера);
	Иначе
		Прокси = Неопределено;
	КонецЕсли;

	Возврат Прокси;
	
КонецФункции


Процедура ИзменитьПриоритетПрокси(ПроксиСервер, Дельта) Экспорт
	
	Попытка
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Блокировка = Новый БлокировкаДанных;
	    ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПроксиСервера_Приоритеты");
	    ЭлементБлокировки.УстановитьЗначение("ПроксиСервер", ПроксиСервер);
	    ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;  
	    Блокировка.Заблокировать();
		
		МенеджерЗаписи = РегистрыСведений.ПроксиСервера_Приоритеты.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ПроксиСервер = ПроксиСервер;
		МенеджерЗаписи.Прочитать();

		ТекущийПриоритетПрокси = МенеджерЗаписи.ПриоритетТелеграм;
		НовыйПриоритетПрокси = ТекущийПриоритетПрокси + Дельта;

		Если НовыйПриоритетПрокси <= 0 Тогда 
		    НовыйПриоритетПрокси = 0;
		ИначеЕсли НовыйПриоритетПрокси > 999 Тогда // Приоритет может быть в диапазоне 0 - 999 
			НовыйПриоритетПрокси = 999;	
		КонецЕсли;	
		
		МенеджерЗаписи.ПроксиСервер = ПроксиСервер; // на случай если после чтения поле окажется пустым
		МенеджерЗаписи.ПриоритетТелеграм = НовыйПриоритетПрокси;
		МенеджерЗаписи.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		ОписаниеОшибки = "Не удалось изменить приоритет прокси сервера. " + ОписаниеОшибки();
		ЗаписьВЖурналОшибок("ВебОбщий", "ИзменитьПриоритетПрокси", ОписаниеОшибки);		
	КонецПопытки;
	
	
КонецПроцедуры



